AWSTemplateFormatVersion: '2010-09-09'
Description: Lambda function with cfn-response for killing the bastion server every night.
Parameters:
  instances:
    Default: i-12345678
    Description: Instance ID's seperated by commers
    Type: String
  Region:
    Default: us-east-2
    Description: region only 1 region supported
    Type: String
  StopScheduled:
    Default: cron(0 18 ? * MON-FRI *)
    Description: enter an Schedule expression example cron(0 6 * * ? *) every day at 11PM  see https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html
    Type: String

Resources:
  StopEC2Instances:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: bastion-killer
      Runtime: python3.8
      Role: !GetAtt Role.Arn
      Handler: index.lambda_handler
      Timeout: 60
      Environment:
         Variables:
          Region: !Ref Region
      Code:
        ZipFile: |
          import json
          import re
          import os
          import boto3

          def lambda_handler(event, context):
            # TODO implement
            region = os.environ['Region']
            ec2 = boto3.client('ec2', region_name=region)
            custom_filter = [{'Name':'tag:Name', 'Values': ['simple-bastion']}]
            response = ec2.describe_instances(Filters=custom_filter)
            instances = [response['Reservations'][0]['Instances'][0]['InstanceId']]
            print(instances)
            ec2.stop_instances(InstanceIds=instances)
            return {
              'statusCode': 200,
              'body': json.dumps('stopped your instances: ' + str(instances))
            }
      Description: Function that stops instances
  permissionForEventsToInvokeStopEC2Instances:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt StopEC2Instances.Arn
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      "SourceArn" : !GetAtt StopScheduledRule.Arn

  Role:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyName: Ec2permissions
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                - "ec2:StartInstances"
                - "ec2:StopInstances"
                - "ec2:DescribeInstances"
                Resource: '*'


  StopScheduledRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "ScheduledRule"
      ScheduleExpression: !Ref StopScheduled
      State: "ENABLED"
      Targets:
        -
          Arn: !GetAtt StopEC2Instances.Arn
          Id: "TargetFunctionV1"